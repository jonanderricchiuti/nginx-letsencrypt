client_max_body_size 16384m;

server {

	root /usr/share/nginx/html;

	index index.html;

	server_name www.dojob.dev dojob.dev;


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;

		proxy_pass http://mona-backend:8081;
		auth_basic		"development";
		auth_basic_user_file	/basic.password;
    		proxy_set_header  Host              $http_host;
    		proxy_set_header  X-Real-IP         $remote_addr;
    		proxy_set_header  X-Forwarded-Host  $http_host;
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    		proxy_set_header  X-Forwarded-Proto $scheme;

	}


  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/dojob.dev/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/dojob.dev/privkey.pem; # managed by Certbot
  #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
	server_name dregistry.dojob.dev;

	location / {

		proxy_pass http://docker-registry:5000;
    		proxy_set_header  Host              $http_host;   # required for docker client's sake
    		proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    		proxy_set_header  X-Forwarded-Proto $scheme;
    		proxy_read_timeout                  900;
	}

  listen [::]:443 ssl; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/dojob.dev/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/dojob.dev/privkey.pem; # managed by Certbot
  #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


server {

  if ($host = dregistry.dojob.dev) {
      return 301 https://$host$request_uri;
  } # managed by Certbot


  if ($host = www.dojob.dev) {
      return 301 https://$host$request_uri;
  } # managed by Certbot


  if ($host = dojob.dev) {
      return 301 https://$host$request_uri;
  } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
  server_name www.dojob.dev dojob.dev dregistry.dojob.dev;
  return 404; # managed by Certbot
}
